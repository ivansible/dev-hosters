---
- name: detect latest do-ctl release
  uri:
    url: https://github.com/digitalocean/doctl/releases/latest
    method: HEAD
    creates: "{{ devhost_allow_reinstall | ternary(omit, devhost_doctl_binary) }}"
  #connection: local  # never use this with "creates"
  register: latest_doctl_release
  until: latest_doctl_release is successful
  when: devhost_doctl_release == 'latest'

- name: extract do-ctl release from github page
  set_fact:
    devhost_doctl_release:
      "{{ latest_doctl_release.url | basename | regex_replace('^v') }}"
  when: latest_doctl_release is not skipped
        and latest_doctl_release.url is defined

- debug:
    msg: "latest do-ctl release: {{ devhost_doctl_release }}"
  run_once: true
  when: latest_doctl_release is not skipped
        and latest_doctl_release.url is defined

- name: download do-ctl
  unarchive:
    remote_src: yes
    src: https://github.com/digitalocean/doctl/releases/download/v{{ devhost_doctl_release }}/doctl-{{ devhost_doctl_release }}-linux-amd64.tar.gz
    dest: "{{ devhost_doctl_binary | dirname }}"
    creates: "{{ devhost_allow_reinstall | ternary(omit, devhost_doctl_binary) }}"

- name: bash completion for do-ctl
  lineinfile:
    path: ~/.local/bashrc/5completion.sh
    line: "source <(doctl completion bash)"
  become: no

- name: authenticate with digital ocean
  # use transient environment variable to hide token from command line
  shell: >
    {{ devhost_doctl_binary }} auth init -t "$_digitalocean_token"
  args:
    creates: ~/.config/doctl/config.yaml
  environment:
    _digitalocean_token: "{{ devhost_digitalocean_token }}"
  become: no
  when: devhost_digitalocean_token != ''
...

---
- name: create directory for terraform plugins
  file:
    state: directory
    path: "{{ terraform_plugin_dir }}"

- name: install terraform
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/terraform/{{terraform_version}}/terraform_{{terraform_version}}_linux_amd64.zip
    dest: /usr/local/bin
    creates: /usr/local/bin/terraform
  become: yes

- name: install terraform-provider-vultr
  get_url:
    url: "https://github.com/{{terraform_provider_vultr_repo_owner}}/terraform-provider-vultr/releases/download/{{terraform_provider_vultr_version}}/terraform-provider-vultr_{{terraform_provider_vultr_version}}_linux_amd64"
    dest: "{{terraform_plugin_dir}}/terraform-provider-vultr_{{terraform_provider_vultr_version}}"
    mode: 0755
    force: no

- name: install terraform-provisioner-ansible
  get_url:
    url: "https://github.com/{{terraform_provisioner_ansible_repo_owner}}/terraform-provisioner-ansible/releases/download/{{terraform_provisioner_ansible_version}}/terraform-provisioner-ansible-linux-amd64_{{terraform_provisioner_ansible_version}}"
    dest: "{{terraform_plugin_dir}}/terraform-provisioner-ansible_{{terraform_provisioner_ansible_version}}"
    mode: 0755
    force: no

- name: checkout terraform plans (only if permitted)
  git:
    dest: "{{ terraform_plans_dir }}"
    repo: "{{ terraform_plans_repo }}"
    version: "{{ terraform_plans_branch }}"
    update: no  # only clone, don't choke on pending modifications
    accept_hostkey: yes
  when: "'permitted' in group_names"
  tags: linhost_terraform_plans
...
